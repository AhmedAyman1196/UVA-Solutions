#include <cstdlib>
#include <iostream>
#include <map>
#include <stdio.h>
#include <vector>
#include<bits/stdc++.h>
#include <ctype.h>
#include <list>
#include <stack>
#include <queue>
#include <string.h>
#include <iomanip>
#include <string>
#include <algorithm>
#include <cmath>
#define _CRT_SECURE_NO_DEPRECATE
#define INF 1000000000
#define Set(a, s) memset(a, s, sizeof (a))
#define forpos(i,j) for (int i=0 ; i<j ; i+=1)
#define forneg(i,j) for (int i=j ;i>=0 ;i-=1)
#define PI 3.14159265358979323846
#define endl "\n"
#define SSTR( x ) dynamic_cast< std::ostringstream & >( \
           ( std::ostringstream() << std::dec << x ) ).str()
#include<queue>

using namespace std;

typedef long long ll;
typedef std::pair<int, int> ii;
typedef std::pair<std::string, int> si;
typedef vector<int> vi;
typedef vector<ii> vii;

/* Min Priority Queue : priority_queue<int, std::vector<int>, std::greater<int> > my_min_heap;*/

/*Set implementation :

 set<int> myset;
 set<int>::iterator it;
 it = myset.find(a[i]);
 if(myset.end()==it){myset.insert(a[i]);

 */

//reverse(result.begin(),result.end());
//---------------------------------------------------
int n , ans  , a[10000];
int main() {
    bool godown, goup;
    while (scanf("%d", &n) && n) {
        for (int i=0; i<n; i++)
            scanf("%d", &a[i]);
        godown = goup = false;
        ans = 0;
        if (a[n-1]<a[0]) goup = true;
        else godown = true;
        a[n] = a[0];
        for (int i=1; i<=n; i++)
            if (a[i-1]<a[i] && godown) {
                ans++;
                godown = false; goup = true;
            }
            else if (a[i-1]>a[i] && goup) {
                ans++;
                godown = true; goup = false;
            }
        printf("%d\n", ans);
    }
    return  0 ;
}

